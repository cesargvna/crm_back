model Section {
  id                String          @id @default(uuid()) @db.VarChar(255)
  name              String          @unique @db.VarChar(40)
  order             Int             @unique @default(0)
  visibility        Boolean         @default(true)

  modules           Module[]

  created_at        DateTime        @default(now())
  updated_at        DateTime        @updatedAt
}

model Module {
  id                String             @id @default(uuid()) @db.VarChar(255)
  name              String             @db.VarChar(40)
  route             String?            @db.VarChar(255)
  iconName          String             @db.VarChar(100)

  sectionId         String             @db.VarChar(255)
  section           Section            @relation(fields: [sectionId], references: [id])
  submodules        Submodule[]
  allowedActions    AllowedAction[]
  rolePermissions   RolePermission[]

  @@unique([name, sectionId])

  created_at        DateTime           @default(now())
  updated_at        DateTime           @updatedAt
}

model Submodule {
  id                String             @id @default(uuid()) @db.VarChar(255)
  name              String             @db.VarChar(40)
  route             String             @db.VarChar(255)

  moduleId          String             @db.VarChar(255)
  module            Module             @relation(fields: [moduleId], references: [id])
  allowedActions    AllowedAction[] 
  rolePermissions   RolePermission[]

  @@unique([name, moduleId])

  created_at        DateTime           @default(now())
  updated_at        DateTime           @updatedAt
}

model PermissionAction {
  id                String             @id @default(uuid()) @db.VarChar(255)
  name              String             @unique @db.VarChar(50)
  status            Boolean            @default(true)

  allowedActions    AllowedAction[]
  rolePermissions   RolePermission[] 

  created_at        DateTime           @default(now())
  updated_at        DateTime           @updatedAt
}

model AllowedAction {
  id                String             @id @default(uuid())
  moduleId          String?
  module            Module?            @relation(fields: [moduleId], references: [id])

  submoduleId       String?
  submodule         Submodule?         @relation(fields: [submoduleId], references: [id])

  actionId          String
  action            PermissionAction   @relation(fields: [actionId], references: [id])

  compositeKey      String             @unique @db.VarChar(255) // <<-- Evita duplicados
}

model Role {
  id               String        @id @default(uuid()) @db.VarChar(255)
  name             String        @db.VarChar(40)
  description      String?       @db.VarChar(255)
  status           Boolean       @default(true)

  tenantId         String        @db.VarChar(255)
  subsidiaryId     String        @db.VarChar(255)
  users            User[]
  rolePermissions  RolePermission[]

  created_at       DateTime      @default(now())
  updated_at       DateTime      @updatedAt

  @@index([tenantId])
  @@index([subsidiaryId])
  @@unique([name, tenantId, subsidiaryId]) 
}

model RolePermission { 
  id              String             @id @default(uuid()) @db.VarChar(255)

  roleId          String             @db.VarChar(255)
  role            Role               @relation(fields: [roleId], references: [id])

  actionId        String             @db.VarChar(255)
  action          PermissionAction   @relation(fields: [actionId], references: [id])

  moduleId        String?            @db.VarChar(255)
  module          Module?            @relation(fields: [moduleId], references: [id])

  submoduleId     String?            @db.VarChar(255)
  submodule       Submodule?         @relation(fields: [submoduleId], references: [id])

  tenantId        String             @db.VarChar(255)
  subsidiaryId    String             @db.VarChar(255)
  compositeKey    String             @unique @db.VarChar(255)

  created_at      DateTime           @default(now())
  updated_at      DateTime           @updatedAt

  @@index([roleId])
  @@index([tenantId])
  @@index([subsidiaryId])
}