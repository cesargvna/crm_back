export const getPermissionSidebarByRole = asyncHandler(async (req: Request, res: Response) => {
  const { roleId } = req.params;

  const role = await prisma.role.findUnique({
    where: { id: roleId },
    include: {
      rolePermissions: {
        where: {
          action: {
            name: 'ver'
          },
        },
        include: {
          section: true,
          module: true,
          submodule: true,
        },
      },
    },
  });

  if (!role) return res.status(404).json({ message: 'Role not found' });

  // Agrupar y estructurar los permisos
  const sectionsMap = new Map<string, any>();

  for (const perm of role.rolePermissions) {
    const section = perm.section;
    if (!section.status) continue;

    if (!sectionsMap.has(section.id)) {
      sectionsMap.set(section.id, {
        id: section.id,
        name: section.name,
        order: section.order,
        modules: [],
      });
    }

    const module = perm.module;
    if (module && module.status) {
      const sectionEntry = sectionsMap.get(section.id);
      let moduleEntry = sectionEntry.modules.find((m: any) => m.id === module.id);

      if (!moduleEntry) {
        moduleEntry = {
          id: module.id,
          name: module.name,
          route: module.route,
          iconName: module.iconName,
          order: module.order,
          submodules: [],
        };
        sectionEntry.modules.push(moduleEntry);
      }

      const submodule = perm.submodule;
      if (submodule && submodule.status) {
        if (!moduleEntry.submodules.some((s: any) => s.id === submodule.id)) {
          moduleEntry.submodules.push({
            id: submodule.id,
            name: submodule.name,
            route: submodule.route,
            order: submodule.order,
          });
        }
      }
    }
  }

  // Convertir a array y ordenar
  const sections = Array.from(sectionsMap.values())
    .sort((a, b) => a.order - b.order)
    .map(section => ({
      ...section,
      modules: section.modules
        .sort((a, b) => a.order - b.order)
        .map(module => ({
          ...module,
          submodules: module.submodules.sort((a, b) => a.order - b.order),
        })),
    }));

  res.json(sections);
});
